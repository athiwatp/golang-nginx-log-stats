# nginx host so we can create live log source
web:
  image: nginx:alpine
  volumes:
   - ./web/nginx.conf:/etc/nginx/nginx.conf:ro
   - ./web/nginx.conf.d:/etc/nginx/conf.d:ro
   - ./web/docroot:/usr/share/nginx/html:ro
   - ./ssl/www.example.com.crt:/etc/nginx/www.example.com.crt:ro
   - ./ssl/www.example.com.key:/etc/nginx/www.example.com.key:ro
   - /var/log/nginx
  command: nginx -g "daemon off;" -c /etc/nginx/nginx.conf
  ports:
   - 80
   - 443

# dump tcp proxy, changes $remote_addr on nginx logs
# gatling tests randomly select between web and proxy
proxy:
  image: nginx:alpine
  volumes:
   - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
  links:
   - web:web
  ports:
   - 80

# runs a defined simulation to create live logs on the nginx server
gatling:
  image: denvazh/gatling:2.1.7
  volumes:
   - ./gatling/simulations:/opt/gatling/user-files/simulations:ro
   - ./gatling/results:/opt/gatling/results
  links:
   - web:web
   - proxy:proxy
#to debug gatling container  command: sleep infinity
  command: sh -c "gatling.sh -sf /opt/gatling/user-files/simulations/ -m && sleep infinity" #keeps container running for manual tests

# lets us graph the statsd metric
statsd:
  image: kamon/grafana_graphite
  ports:
   - 80
   - 81
   - 8125
   - 8126

# runs the golang program to watch the nginx log file
nginxstats:
  image: golang:alpine
  volumes_from:
   - web:ro
   - statsd:ro
  volumes:
   - ./golangstats:/go:ro
  command: go run /go/nginxstats.go
  links:
   - statsd:statsd
